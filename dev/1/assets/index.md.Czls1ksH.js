import{_ as e,c as s,o as i,aA as t}from"./chunks/framework.YkF_Stjf.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"GMRFs in Julia","text":"Fast and Flexible Latent Gaussian Modelling","tagline":"Clean syntax, fast computations. Powered by the Julia ecosystem.","image":{"src":"/assets/logo.svg","alt":"GaussianMarkovRandomFields.jl"},"actions":[{"theme":"brand","text":"Get Started","link":"/tutorials/"},{"theme":"alt","text":"View on GitHub","link":"https://github.com/timweiland/GaussianMarkovRandomFields.jl"},{"theme":"alt","text":"API Reference","link":"/reference/"}]},"features":[{"title":"âš¡ High Performance","details":"Leverages sparse matrix structures for fast computations, enabled by LinearSolve.jl and SelectedInversion.jl."},{"title":"ðŸ“Š Smart Observation Models","details":"Built-in exponential family support. Sparse autodiff makes it easy to define your own likelihoods."},{"title":"ðŸŽ¯ Ready-to-Use Latent Models","details":"AR1, RW1, Besag, ... out-of-the-box. Combine them seamlessly to build complex hierarchical structures."},{"title":"ðŸ”¬ SPDE Discretizations","details":"Model with a GP, compute with a GMRF. The SPDE approach makes it possible."},{"title":"ðŸ§® Solver Variety","details":"CHOLMOD, Pardiso, Krylov methods... Your choice - we make it work."},{"title":"ðŸ”— Composable Design","details":"Mix and match components: combine latent models, stack observation models, chain transformations - everything just works together."}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),n={name:"index.md"};function l(o,a,r,d,h,p){return i(),s("div",null,[...a[0]||(a[0]=[t(`<h2 id="What-are-Gaussian-Markov-Random-Fields?" tabindex="-1">What are Gaussian Markov Random Fields? <a class="header-anchor" href="#What-are-Gaussian-Markov-Random-Fields?" aria-label="Permalink to &quot;What are Gaussian Markov Random Fields? {#What-are-Gaussian-Markov-Random-Fields?}&quot;">â€‹</a></h2><p>Gaussian Markov Random Fields (GMRFs) are Gaussian distributions with sparse precision (inverse covariance) matrices. This sparsity structure makes them computationally efficient for large-scale problems while maintaining the expressiveness needed for complex spatial and temporal modeling.</p><h2 id="Quick-Start" tabindex="-1">Quick Start <a class="header-anchor" href="#Quick-Start" aria-label="Permalink to &quot;Quick Start {#Quick-Start}&quot;">â€‹</a></h2><p>Install the package:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pkg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GaussianMarkovRandomFields&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GaussianMarkovRandomFields</span></span></code></pre></div>`,5)])])}const u=e(n,[["render",l]]);export{k as __pageData,u as default};
