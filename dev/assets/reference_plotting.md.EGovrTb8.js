import{_ as n,C as p,c as d,o as r,aA as a,j as s,G as t,a as o,w as l}from"./chunks/framework.B28kaWcy.js";const y=JSON.parse('{"title":"Plotting","description":"","frontmatter":{},"headers":[],"relativePath":"reference/plotting.md","filePath":"reference/plotting.md","lastUpdated":null}'),c={name:"reference/plotting.md"},h={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""};function k(g,e,u,_,f,E){const i=p("Badge");return r(),d("div",null,[e[8]||(e[8]=a('<h1 id="Plotting" tabindex="-1">Plotting <a class="header-anchor" href="#Plotting" aria-label="Permalink to &quot;Plotting {#Plotting}&quot;">â€‹</a></h1><p>GaussianMarkovRandomFields.jl offers recipes to make plotting spatial and spatiotemporal GMRFs effortless. These recipes are contained in a package extension which gets loaded automatically when using Makie (or rather: one of its backends).</p><p>All of the following methods may also be called more simply by calling <code>plot</code> or <code>plot!</code> with appropriate arguments.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>Currently, we only provide recipes for 1D spatial and spatiotemporal GMRFs. This may change soon (feel free to open a PR!) Until then, note that any 2D or 3D FEM-based GMRF may be plotted indirectly through Ferrite&#39;s support of VTK files, which may then subsequently be opened e.g. in ParaView for visualization. See <a href="/GaussianMarkovRandomFields.jl/dev/tutorials/spatial_modelling_spdes#Spatial-Modelling-with-SPDEs">Spatial Modelling with SPDEs</a> for an example.</p></div>',4)),s("details",h,[s("summary",null,[e[0]||(e[0]=s("a",{id:"GaussianMarkovRandomFields.gmrf_fem_1d_plot",href:"#GaussianMarkovRandomFields.gmrf_fem_1d_plot"},[s("span",{class:"jlbinding"},"GaussianMarkovRandomFields.gmrf_fem_1d_plot")],-1)),e[1]||(e[1]=o()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[3]||(e[3]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">gmrf_fem_1d_plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gmrf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractGMRF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, disc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FEMDiscretization{1}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plot the GMRF <code>gmrf</code> based on the 1D FEM discretization <code>disc</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>gmrf::AbstractGMRF</code>: The GMRF to plot.</p></li><li><p><code>disc::FEMDiscretization{1}</code>: The FEM discretization.</p></li></ul><p><strong>Keyword arguments</strong></p><ul><li><p><code>with_std::Bool=true</code>: Whether to plot the confidence bands.</p></li><li><p><code>N_samples::Int=3</code>: The number of samples to plot.</p></li><li><p><code>rng::AbstractRNG=Random.default_rng()</code>: The random number generator.</p></li><li><p><code>field::Symbol=:default</code>: The field to plot.</p></li><li><p><code>mean_color</code>: The color of the mean line.</p></li><li><p><code>conf_band_color</code>: The color of the confidence bands.</p></li><li><p><code>sample_color</code>: The color of the samples.</p></li></ul>',6)),t(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[2]||(e[2]=[s("a",{href:"https://github.com/timweiland/GaussianMarkovRandomFields.jl/blob/57a7c6c1c602e25080c466e0dade2d87e250b1b3/src/plots/makie.jl#L8-L25",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",m,[s("summary",null,[e[4]||(e[4]=s("a",{id:"GaussianMarkovRandomFields.gmrf_fem_1d_spatiotemporal_plot",href:"#GaussianMarkovRandomFields.gmrf_fem_1d_spatiotemporal_plot"},[s("span",{class:"jlbinding"},"GaussianMarkovRandomFields.gmrf_fem_1d_spatiotemporal_plot")],-1)),e[5]||(e[5]=o()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[7]||(e[7]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">gmrf_fem_1d_spatiotemporal_plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gmrf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ConstantMeshSTGMRF{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, LinearConditionalGMRF{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ConstantMeshSTGMRF{1}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t_idx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plot the 1D spatiotemporal GMRF <code>gmrf</code> at time index <code>t_idx</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>gmrf</code>: The GMRF to plot.</p></li><li><p><code>t_idx::Int</code>: The time index.</p></li></ul><p><strong>Keyword arguments</strong></p><ul><li><p><code>with_std::Bool=true</code>: Whether to plot the confidence bands.</p></li><li><p><code>N_samples::Int=3</code>: The number of samples to plot.</p></li><li><p><code>rng::AbstractRNG=Random.default_rng()</code>: The random number generator.</p></li><li><p><code>field::Symbol=:default</code>: The field to plot.</p></li><li><p><code>mean_color</code>: The color of the mean line.</p></li><li><p><code>conf_band_color</code>: The color of the confidence bands.</p></li><li><p><code>sample_color</code>: The color of the samples.</p></li></ul>`,6)),t(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[6]||(e[6]=[s("a",{href:"https://github.com/timweiland/GaussianMarkovRandomFields.jl/blob/57a7c6c1c602e25080c466e0dade2d87e250b1b3/src/plots/makie.jl#L29-L51",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const F=n(c,[["render",k]]);export{y as __pageData,F as default};
