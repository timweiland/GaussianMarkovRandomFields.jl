import{_ as o,C as r,c as d,o as p,aA as l,j as i,G as e,a as n,w as t}from"./chunks/framework.B28kaWcy.js";const v=JSON.parse('{"title":"Formula Interface","description":"","frontmatter":{},"headers":[],"relativePath":"reference/formula.md","filePath":"reference/formula.md","lastUpdated":null}'),k={name:"reference/formula.md"},h={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""};function E(f,s,y,F,b,_){const a=r("Badge");return p(),d("div",null,[s[20]||(s[20]=l(`<h1 id="Formula-Interface" tabindex="-1">Formula Interface <a class="header-anchor" href="#Formula-Interface" aria-label="Permalink to &quot;Formula Interface {#Formula-Interface}&quot;">​</a></h1><p>The formula interface lets you compose models succinctly using <code>StatsModels.jl</code> syntax. It maps terms on the right-hand side to latent components and assembles a sparse design matrix that connects observations to the combined latent field. To use the formula syntax, load <code>StatsModels</code> first to activate the corresponding package extension.</p><h2 id="Quick-Example" tabindex="-1">Quick Example <a class="header-anchor" href="#Quick-Example" aria-label="Permalink to &quot;Quick Example {#Quick-Example}&quot;">​</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GaussianMarkovRandomFields, StatsModels, Distributions, SparseArrays</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Suppose W is a spatial adjacency for regions; y are counts with an offset</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">besag </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Besag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(W)                         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># structured spatial effect</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @formula</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(region) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> besag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(region))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">comp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> build_formula_components</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, data; family </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Poisson)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lik  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">obs_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y; offset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logE)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prior </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">combined_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; τ_besag</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, τ_iid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">post  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> gaussian_approximation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(prior, lik)</span></span></code></pre></div><h2 id="Terms-and-Builders" tabindex="-1">Terms and Builders <a class="header-anchor" href="#Terms-and-Builders" aria-label="Permalink to &quot;Terms and Builders {#Terms-and-Builders}&quot;">​</a></h2>`,5)),i("details",h,[i("summary",null,[s[0]||(s[0]=i("a",{id:"GaussianMarkovRandomFields.IID",href:"#GaussianMarkovRandomFields.IID"},[i("span",{class:"jlbinding"},"GaussianMarkovRandomFields.IID")],-1)),s[1]||(s[1]=n()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[3]||(s[3]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(group)</span></span></code></pre></div><p>Formula constructor for IID random effects. Use only inside <code>@formula</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:t(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/timweiland/GaussianMarkovRandomFields.jl/blob/97b26741f01925cdd02ec7f634f45a0804af14e2/src/formula/constructors.jl#L11-L15",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",u,[i("summary",null,[s[4]||(s[4]=i("a",{id:"GaussianMarkovRandomFields.RandomWalk",href:"#GaussianMarkovRandomFields.RandomWalk"},[i("span",{class:"jlbinding"},"GaussianMarkovRandomFields.RandomWalk")],-1)),s[5]||(s[5]=n()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[7]||(s[7]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RandomWalk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(order, index)</span></span></code></pre></div><p>Formula constructor for RandomWalk random effects (order=1 MVP). Use only inside <code>@formula</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:t(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/timweiland/GaussianMarkovRandomFields.jl/blob/97b26741f01925cdd02ec7f634f45a0804af14e2/src/formula/constructors.jl#L20-L24",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",c,[i("summary",null,[s[8]||(s[8]=i("a",{id:"GaussianMarkovRandomFields.AR1",href:"#GaussianMarkovRandomFields.AR1"},[i("span",{class:"jlbinding"},"GaussianMarkovRandomFields.AR1")],-1)),s[9]||(s[9]=n()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[11]||(s[11]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AR1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index)</span></span></code></pre></div><p>Formula constructor for AR1 random effects. Use only inside <code>@formula</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:t(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/timweiland/GaussianMarkovRandomFields.jl/blob/97b26741f01925cdd02ec7f634f45a0804af14e2/src/formula/constructors.jl#L29-L33",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",g,[i("summary",null,[s[12]||(s[12]=i("a",{id:"GaussianMarkovRandomFields.Besag",href:"#GaussianMarkovRandomFields.Besag"},[i("span",{class:"jlbinding"},"GaussianMarkovRandomFields.Besag")],-1)),s[13]||(s[13]=n()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[15]||(s[15]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Besag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(W; id_to_node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, normalize_var </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, singleton_policy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :gaussian</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Formula functor for Besag (intrinsic CAR) random effects.</p><p>Usage:</p><ul><li><p>Create a functor instance: <code>besag = Besag(W)</code></p></li><li><p>With string/categorical region IDs: <code>besag = Besag(W; id_to_node = Dict(&quot;WesternIsles&quot; =&gt; 11, ...))</code></p></li><li><p>Use in a formula: <code>@formula(y ~ 0 + besag(region))</code></p></li></ul><p>Notes</p><ul><li><p><code>id_to_node</code> maps arbitrary region identifiers to integer node indices (1-based) of <code>W</code>.</p></li><li><p>Calling the functor directly is unsupported outside formula parsing.</p></li></ul>',6)),e(a,{type:"info",class:"source-link",text:"source"},{default:t(()=>[...s[14]||(s[14]=[i("a",{href:"https://github.com/timweiland/GaussianMarkovRandomFields.jl/blob/97b26741f01925cdd02ec7f634f45a0804af14e2/src/formula/constructors.jl#L38-L51",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",m,[i("summary",null,[s[16]||(s[16]=i("a",{id:"GaussianMarkovRandomFields.build_formula_components",href:"#GaussianMarkovRandomFields.build_formula_components"},[i("span",{class:"jlbinding"},"GaussianMarkovRandomFields.build_formula_components")],-1)),s[17]||(s[17]=n()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[19]||(s[19]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">build_formula_components</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(formula, data; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Placeholder function for the formula interface. A concrete method is provided by the <code>GaussianMarkovRandomFieldsFormula</code> extension when <code>StatsModels</code> is loaded.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:t(()=>[...s[18]||(s[18]=[i("a",{href:"https://github.com/timweiland/GaussianMarkovRandomFields.jl/blob/97b26741f01925cdd02ec7f634f45a0804af14e2/src/formula/constructors.jl#L3-L8",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[21]||(s[21]=i("h2",{id:"See-Also",tabindex:"-1"},[n("See Also "),i("a",{class:"header-anchor",href:"#See-Also","aria-label":'Permalink to "See Also {#See-Also}"'},"​")],-1)),s[22]||(s[22]=i("ul",null,[i("li",null,[n("The BYM + fixed effects Poisson tutorial shows this in practice: "),i("a",{href:"/GaussianMarkovRandomFields.jl/dev/tutorials/bym_scotland_lip_cancer#Advanced-GMRF-modelling-for-disease-mapping"},"Advanced GMRF modelling for disease mapping")])],-1))])}const A=o(k,[["render",E]]);export{v as __pageData,A as default};
